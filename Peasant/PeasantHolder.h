////////////////////////////////////////////////////////////////////////////////
// Filename: PeasantHolder.h
////////////////////////////////////////////////////////////////////////////////
#pragma once

//////////////
// INCLUDES //
//////////////
#include "PeasantConfig.h"
#include "PeasantObject.h"

#include <cstdint>
#include <vector>
#include <atomic>

///////////////
// NAMESPACE //
///////////////

/////////////
// DEFINES //
/////////////

////////////
// GLOBAL //
////////////

///////////////
// NAMESPACE //
///////////////

// Peasant
PeasantDevelopmentNamespaceBegin(Peasant)

//////////////
// TYPEDEFS //
//////////////

////////////////
// FORWARDING //
////////////////


////////////////////////////////////////////////////////////////////////////////
// Class name: PeasantHolder
////////////////////////////////////////////////////////////////////////////////
class PeasantHolder
{
public:

//////////////////
// CONSTRUCTORS //
public: //////////

	// Constructor / destructor
	PeasantHolder(PeasantObject* _object);
	virtual ~PeasantHolder();

//////////////////
// MAIN METHODS //
public: //////////

///////////////
// VARIABLES //
private: //////

	// The object we are referencing
	PeasantObject* m_ReferenceObject;
};

// Peasant
PeasantDevelopmentNamespaceEnd(Peasant)